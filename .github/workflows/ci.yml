name: LogNarrator CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
          if [ -f src/cloud/requirements-dev.txt ]; then pip install -r src/cloud/requirements-dev.txt; fi

      - name: Lint with flake8
        run: |
          flake8 src/cloud/ --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check formatting with black
        run: |
          black --check src/cloud/

      - name: Check imports with isort
        run: |
          isort --check-only --profile black src/cloud/

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path src/client/rust/Cargo.toml --all-features

  test-client:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path src/client/rust/Cargo.toml --all-features

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path src/client/rust/Cargo.toml --all-features

  test-cloud:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f src/cloud/requirements.txt ]; then pip install -r src/cloud/requirements.txt; fi
          if [ -f src/cloud/requirements-dev.txt ]; then pip install -r src/cloud/requirements-dev.txt; fi

      - name: Test with pytest
        run: |
          pytest src/cloud/tests/ --cov=src/cloud/ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  build-docker:
    runs-on: ubuntu-latest
    needs: [test-client, test-cloud]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push client
        uses: docker/build-push-action@v3
        with:
          context: ./src/client
          push: true
          tags: lognarrator/client:latest,lognarrator/client:${{ github.sha }}

      - name: Build and push cloud
        uses: docker/build-push-action@v3
        with:
          context: ./src/cloud
          push: true
          tags: lognarrator/cloud:latest,lognarrator/cloud:${{ github.sha }}
